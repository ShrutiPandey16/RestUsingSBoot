*   Stateless -> communication method in which the server completes every client request independently of all previous requests.

*   REST -> Representation State Transfer
        R -> In a proper format(e.g. json, xml etc) Representation of a resource not the resource itself.
        S -> Current condition or data of the resource at an instance. REST is stateless.
        T -> The state is transferred from the server to the client via HTTP methods (GET, POST, etc.).

*   REST uses Noun rather than Verb. Eg. .../addAJob -> .../job

*   1. start the server, we can create pseudo server by installing json-server    
        npm i json-server
    2. run server
        json-server --watch db.json --port 8080  
    3. install all the packages
        npm i
    4. start react
        npm start

*   By default, @Controller annotation is used to return views(like jsp pages).
    To return raw data(json, xml etc.), there are 2 options:
        1. use @ResponseBody + @Controller annotation
            
            @Controller
            public class MyController {

                @GetMapping("/data")
                @ResponseBody
                public String getData() {
                    return "Hello, this is raw data";
                }
            }

        2. use @RestController annotation with the class
            @RestController
            public class MyRestController {

                @GetMapping("/data")
                public String getData() {
                    return "Hello, this is raw data";
                }
            }

            @RestController = @Controller + @ResponseBody
    Use @RestController when creating REST APIs, and @Controller when returning views like JSPs or Thymeleaf templates.

        
